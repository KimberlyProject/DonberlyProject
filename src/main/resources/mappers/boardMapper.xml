<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ezen.board.mappers.boardMapper">

	<!-- <resultMap id="articlesResult" type="com.ezen.board.dto.ArticleVO"> -->
	<resultMap id="articlesResult" type="articleVO">
		<result property="rnum"				column="recNum"/>
		<result property="level"			column="lvl"/>
		<result property="articleNO"		column="articleNO"/>
		<result property="userId"			column="userId"/>
		<result property="write_date"		column="write_date"/>
		<result property="title"			column="title"/>
		<result property="content"			column="content"/>
		<result property="p_code"			column="p_code"/>
		<result property="purpose"			column="purpose"/>
		<result property="view"				column="view"/>
		<result property="thumbnail"		column="thumbnail"/>
		<result property="price"			column="price"/>
	</resultMap>
	
	<resultMap id="saleArticlesResult" type="saleArticleVO">
		<result property="rnum"				column="recNum"/>
		<result property="level"			column="lvl"/>
		<result property="articleNO"		column="articleNO"/>
		<result property="userId"			column="userId"/>
		<result property="write_date"		column="write_date"/>
		<result property="title"			column="title"/>
		<result property="content"			column="content"/>
		<result property="p_code"			column="p_code"/>
		<result property="purpose"			column="purpose"/>
		<result property="view"				column="view"/>
		<result property="thumbnail"		column="thumbnail"/>
		<result property="price"			column="price"/>
	</resultMap>

	<!-- 게시물 목록 : 계층상태로 추출하기 -->
	<select id="selectAllArticleList" resultMap="articlesResult">
		<![CDATA[
		SELECT	 articleNO, userId, write_date, title, content,  thumbnail, price
		FROM		article_buy
		]]>
	</select>
	
	<select id="saleSelectAllArticleList" resultMap="saleArticlesResult">
		<![CDATA[
		SELECT	 articleNO, userId, write_date, title, content,  thumbnail, price
		FROM		article_sale
		]]>
	</select>
	
	<!-- 새로운 게시글에 사용할 번호 추출하기 : 게시글 테이블에서 -->
	<select id="selectNewArticleNO" resultType="int">
		<![CDATA[
			SELECT	NVL(MAX(articleNO), 0) + 1
			FROM	article_buy
		]]>
	</select>
	
	<select id="saleSelectNewArticleNO" resultType="int">
		<![CDATA[
			SELECT	NVL(MAX(articleNO), 0) + 1
			FROM	article_sale
		]]>
	</select>
	
	
	<select id="selectNewPcode" resultType="int">
		<![CDATA[
			SELECT	NVL(MAX(p_code), 0) + 1
			FROM	article_buy
		]]>
	</select>
		
	<select id="saleSelectNewPcode" resultType="int">
		<![CDATA[
			SELECT	NVL(MAX(p_code), 0) + 1
			FROM	article_sale
		]]>
	</select>

	<!-- 새로운 게시글 추가하기 -->
	<!-- parentNO와 writeDate는 기본값을 적용시킨다. -->
	<insert id="insertNewArticle" parameterType="java.util.Map">
		<![CDATA[
			INSERT INTO article_buy
					(articleNO,  userId, write_date,	title,		content,	 thumbnail, price, p_code)
			VALUES 	(#{articleNO}, #{userId}, sysdate,	#{title},	#{content},	#{thumbnail}, #{price} , #{p_code})
		]]>
	</insert>
	
	<insert id="saleInsertNewArticle" parameterType="java.util.Map">
		<![CDATA[
			INSERT INTO article_sale
					(articleNO,  userId, write_date,	title,		content,	 thumbnail, price, p_code)
			VALUES 	(#{articleNO}, #{userId}, sysdate,	#{title},	#{content},	#{thumbnail}, #{price} , #{p_code})
		]]>
	</insert>

	<!-- 게시글 번호에 해당하는 상세 정보 -->
	<select id="selectArticle" parameterType="int" resultType="articleVO">
		<![CDATA[
			SELECT	*
			FROM	article_buy
			WHERE	articleNO = #{articleNO}
		]]>
	</select>
	
	<select id="saleSelectArticle" parameterType="int" resultType="saleArticleVO">
		<![CDATA[
			SELECT	*
			FROM	article_sale
			WHERE	articleNO = #{articleNO}
		]]>
	</select>
	
	<!-- 게시글 번호에 해당하는 글 삭제하기 -->
	<delete id="deleteArticle" parameterType="int">
		<![CDATA[
			DELETE FROM article_buy
			WHERE  articleNO = #{articleNO}
		]]>
	</delete>
	
	<delete id="saleDeleteArticle" parameterType="int">
		<![CDATA[
			DELETE FROM article_sale
			WHERE  articleNO = #{articleNO}
		]]>
	</delete>
	
	<!-- 게시글 번호에 해당하는 정보수정하기 -->
	<!-- 게시글 번호에 해당하는 타이틀, 글내용, 이미지파일 업데이트하기 -->
	<update id="updateArticle" parameterType="java.util.Map">
		<![CDATA[
		UPDATE	article_Buy
		SET		title		= #{title},
				content		= #{content},
				purpose		= #{purpose},
				thumbnail 	= #{thumbnail},
				price		= #{price}

		WHERE	articleNO	= #{articleNO}
		]]>
	</update>
	
	<update id="saleUpdateArticle" parameterType="java.util.Map">
		<![CDATA[
		UPDATE	article_sale
		SET		title		= #{title},
				content		= #{content},
				purpose		= #{purpose},
				thumbnail 	= #{thumbnail},
				price		= #{price}

		WHERE	articleNO	= #{articleNO}
		]]>
	</update>
	
	
	<!-- 게시글 검색조건 -->
	<sql id="search">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">AND TITLE	LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'c'.toString()">AND CONTENT	LIKE '%' || #{keyword} || '%'</if>
			<if test="searchType == 'w'.toString()">AND ID		LIKE '%' || #{keyword} || '%'</if>
		</if>
	</sql>
	
	
	<!-- 전체 게시글 수 구하기 (Paging 처리) -->
	<select id="buyListTotalCount" parameterType="com.ezen.board.dto.Criteria" resultType="Integer">
		<![CDATA[
		 	SELECT	COUNT(*)
		 	FROM	article_buy
		 	WHERE	1=1
		]]>
			<include refid="search"/>
	</select>
	
	<select id="saleListTotalCount" parameterType="com.ezen.board.dto.Criteria" resultType="Integer">
		<![CDATA[
		 	SELECT	COUNT(*)
		 	FROM	article_sale
		 	WHERE	1=1
		]]>
			<include refid="search"/>
	</select>
	
	<!-- 게시글 목록 가져오기 (Paging) -->
	<!-- ROWNUM 을 가장 안 쪽에 사용하면 Mapper에서 인식을 못하기 때문에 바깥쪽에 사용하였다. -->
	<!-- rownum, level 이름으로 인해서 resultMap articlesResult 로 사용한다. -->
	<select id="boardListPaging" parameterType="com.ezen.board.dto.Criteria" resultMap="articlesResult">
	<![CDATA[
	SELECT	*
	FROM	(
		SELECT  ROWNUM AS recNum, articleNO, userId, write_date, title, content, purpose, thumbnail, price
		FROM article_buy 
        WHERE		1=1
 	]]>
 		<include refid='search'/>
 	<![CDATA[
     )       
	where recNum BETWEEN (#{page} - 1) * #{perPageNum} + 1 AND #{page} * #{perPageNum}
	]]>
	</select>
	
	<select id="saleBoardListPaging" parameterType="com.ezen.board.dto.Criteria" resultMap="saleArticlesResult">
	<![CDATA[
	SELECT	*
	FROM	(
		SELECT  ROWNUM AS recNum, articleNO, userId, write_date, title, content, purpose, thumbnail, price
		FROM article_sale
        WHERE		1=1
 	]]>
 		<include refid='search'/>
 	<![CDATA[
     )       
	where recNum BETWEEN (#{page} - 1) * #{perPageNum} + 1 AND #{page} * #{perPageNum}
	]]>
	</select>
	
	
	
	
	<!-- 구매완료 -->
	<update id="buyNow" parameterType="java.util.Map">
	<![CDATA[
		UPDATE	article_buy
		SET		userId = #{userId},
				purpose = 1
		WHERE	articleNO	= #{articleNO}
	]]>
	</update>
	
	<update id="saleNow" parameterType="java.util.Map">
	<![CDATA[
		UPDATE	article_sale
		SET		userId = #{userId},
				purpose = 1
		WHERE	articleNO	= #{articleNO}
	]]>
	</update>
	
</mapper>


